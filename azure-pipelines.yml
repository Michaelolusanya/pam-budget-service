# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: subscriptionId
  value: '73352462-5185-4eab-afca-eed6b857bbe0'
- name: resourceGroup
  value: 'BackendRewrite'
- name: containerRegistryName
  value: crbackendrewritedev
- name: containerConnection
  value: '{"loginServer":"$(containerRegistryName).azurecr.io", "id" : "/subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)/providers/Microsoft.ContainerRegistry/registries/$(containerRegistryName)"}'

steps:
  # Build application
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

  - task: CopyFiles@2
    displayName: 'Copy files to staging folder'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/*.jar'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: icomdev.pam-budget-service'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
  
  # Build container image
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscription: 'sc-cbrs-ikeaorderandcreate-nonprd'
      dockerFile: '**/Dockerfile'
      imageName: $(Build.Repository.Name):$(Build.BuildId)
      action: 'Build an image'
      azureContainerRegistry: $(containerConnection)
      includeLatestTag: true

  # Push container image
  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscription: 'sc-cbrs-ikeaorderandcreate-nonprd'
      imageName: $(Build.Repository.Name):$(Build.BuildId)
      azureContainerRegistry: $(containerConnection)
      action: 'Push an image'
      includeLatestTag: true